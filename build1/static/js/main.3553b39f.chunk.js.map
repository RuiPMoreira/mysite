{"version":3,"sources":["logo.svg","components/projects/Project.js","components/projects/index.js","components/Area.js","components/Header1.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","library","add","faExternalLinkSquareAlt","faGitSquare","Project","props","state","slideUp","newValue","this","setState","project","title","image","description","categories","className","src","onClick","setSlideUp","length","map","elem","ariaLabel","href","target","icon","Component","Projects","projects","index","key","Area","bgColor","style","backgroundColor","children","Header1","useState","isSticky","setSticky","headerRef","useRef","navbarRef","handleScroll","navbarOffsetTop","current","getBoundingClientRect","top","height","useEffect","window","addEventListener","removeEventListener","ref","class","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3553b39f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component  } from 'react';\n\n//import faExternalLinkSquareAlt from '@fortawesome/free-solid-svg-icons/faExternalLinkSquareAlt';\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faExternalLinkSquareAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGitSquare } from \"@fortawesome/free-brands-svg-icons\";\n\nlibrary.add(faExternalLinkSquareAlt, faGitSquare);\n\nexport default class Project extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slideUp: false\n    };\n  }\n\n  setSlideUp(newValue) {\n    this.setState({slideUp: newValue});\n  }\n  \n  render() {\n    const {title, image, description, categories=[]} = this.props.project;\n\n    const {slideUp} = this.state\n\n    return (\n      <div className=\"project card\">\n        <div className=\"main-card\">\n          <img src={image} />\n          <div className=\"card-header\">\n            <div>{title}</div>\n            <img src=\"https://image.flaticon.com/icons/png/512/61/61140.png\" onClick={() => this.setSlideUp(!slideUp)} />\n          </div>\n          <div className=\"card-description\">{description}</div>\n        </div>\n        <div className={`hidden-card ${slideUp ? \"slideup\" : \"slidedown\"}`}>\n          <div className=\"card-header\">\n            <div>{\"title\"}</div>\n            <img src=\"https://image.flaticon.com/icons/png/512/106/106830.png\" onClick={() => this.setSlideUp(!slideUp)} />\n          </div>\n          {categories.length>0 && (\n              <ul>\n                {categories.map((elem)=><li>{elem}</li>)}\n              </ul>\n            )\n          }\n          <div className=\"card-footer\">\n            <a className=\"card-action\" ariaLabel=\"Visit Interpol8r web app\" href=\"https://interpol8r.herokuapp.com/\" target=\"_blank\">\n            <span className=\"tooltiptext\">View</span>\n              \n              <FontAwesomeIcon icon=\"external-link-square-alt\" />\n            </a>\n            <a className=\"card-action\" ariaLabel=\"Visit Interpol8r web app\" href=\"https://interpol8r.herokuapp.com/\" target=\"_blank\">\n                <span className=\"tooltiptext\">View Source</span>\n              <FontAwesomeIcon icon={['fab',\"git-square\"]} />\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport projects from \"../../data/projects\";\n\nimport Project from \"./Project\";\n\nexport default class Projects extends Component {\n  render() {\n    return (\n      <div className=\"projects-container\">\n        {projects.map((project, index) => <Project key={index} project={project} />)}\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport default class Area extends Component {\n  render() {\n    const {title, bgColor} = this.props;\n    return (\n      <div className=\"area\">\n        <div className=\"area-title\" style={{backgroundColor: bgColor}}>{title}</div>\n        {this.props.children}\n      </div>\n    );\n  }\n}","import React,{useEffect, useRef, useState } from 'react';\n\nimport \"../Header1.css\";\n\nexport default function Header1() {\n  const [isSticky, setSticky] = useState(false);\n  const headerRef = useRef(null);\n  const navbarRef = useRef(null);\n\n  const handleScroll = () => {\n    const navbarOffsetTop = (headerRef.current.getBoundingClientRect().top +\n                            headerRef.current.getBoundingClientRect().height -\n                            navbarRef.current.getBoundingClientRect().height);\n    setSticky(navbarOffsetTop <= 0);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', () => handleScroll);\n    };\n  }, []);\n  \n  return (\n    <div className=\"header\" ref={headerRef}>\n      <div className=\"profile-name\">Rui Moreira</div>\n      <div className=\"profile-description\">Software Engineer</div>\n      <div className={`navbar ${isSticky ? \"stiky\" : \"\"}`} ref={navbarRef}>\n        <a class=\"active\" href=\"javascript:void(0)\">About Me</a>\n        <a href=\"javascript:void(0)\">Projects</a>\n        <a href=\"javascript:void(0)\">Contact</a>\n      </div>\n    </div>\n  );\n}","import React,{useEffect, useRef, useState } from 'react';\nimport logo from '../logo.svg';\nimport '../App.css';\n\nimport Projects from \"./projects\"\nimport Area from \"./Area\"\nimport Header1 from \"./Header1\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header1/>\n      <div className=\"container\">      \n        <Area title=\"Sobre Mim\" bgColor=\"#668cac\">\n          <div className=\"area-content\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer ac tincidunt ipsum, at gravida quam. Pellentesque ut rutrum massa, posuere malesuada odio. Praesent at augue sem. Duis ut efficitur lorem. Ut diam justo, dignissim vel tortor sed, venenatis pharetra dolor. Etiam sed scelerisque nisi, sit amet tincidunt justo. Phasellus hendrerit pellentesque tincidunt. Duis sit amet nisl sed massa tempor imperdiet at eget velit. Sed fringilla ac metus varius aliquam. Pellentesque et egestas mauris, elementum semper tellus. Pellentesque dictum id quam eu scelerisque. Integer semper rhoncus maximus.\n\n          Proin varius velit vel laoreet egestas. Morbi consectetur ligula ac eros sodales, pellentesque ultricies risus bibendum. Proin sollicitudin purus sed commodo convallis. Pellentesque ac tempor magna. Suspendisse potenti. Sed pharetra metus lectus, ac tincidunt dolor gravida pulvinar. Nam vestibulum enim odio, vel consequat ante efficitur in. Aliquam erat volutpat.\n          </div>\n        </Area>\n        <Area title=\"Projetos\" bgColor=\"#63b0a9\"><Projects /></Area>\n        <Area title=\"Contactos\" bgColor=\"#b86363\">\n          <div className=\"area-content\">\n            facebook\n          </div>\n        </Area>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n/**\n * \n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n */","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}